public class Shape {
    private String color="green";
    private boolean filled= true;
    public Shape(String color, boolean filled) {
        this.color= color;
        this.filled= filled;
    }
    public String getColor() {
        return color;
    }
    public void setColor(String color) {
        this.color = color;
    }
    public boolean isFilled() {
        return filled;
    }
    public void setFilled(boolean filled) {
        this.filled = filled;
    }

    @Override
    public String toString() {
        return "A shape with color of"+getColor()+" and "+(isFilled()?"filled":"not filled")






                ;
    }
}

public class Rectangle extends Shape {
    private double width;
    private double length;
    public Rectangle(String color,boolean filled,double width, double length) {
        super(color,filled);
        this.width = width;
        this.length = length;
    }
    public double getWidth() {
        return width;
    }
    public double getLength() {
        return length;
    }
    public void setWidth(double width) {
        this.width = width;
    }
    public void setLength(double length) {
        this.length = length;
    }
    public double getArea() {
        return width * length;
    }
    public double getPerimeter() {
        return 2 * width + 2 * length;
    }
    @Override
    public String toString() {
        return "A Rectangle with width "+ this.width+" and length "+ this.length+"which is a suclass of"+ super.toString();
    }

}

public class Circle extends Shape{
    private double radius =1.0;
    public Circle(String color,boolean filled, double radius){
        super(color,filled);
        this.radius = radius;
    }
    public double getRadius(){
        return radius;
    }
    public void setRadius(double radius){
        this.radius = radius;
    }
    public double getArea(){
        return Math.PI*radius*radius;
    }
    public double getPerimeter(){
        return 2*Math.PI*radius;
    }
    @Override
    public String toString(){
        return "A Circle with radius " + radius + " , which is a subclass of " + super.toString();
    }
}

public class Square extends Rectangle {
    private double side;
    public Square(double width,double length , String color,boolean filled) {
        super(color,filled);
        side = width;
        side = length;
    }
    public double getSide() {
        return getWidth();
    }
    public void setSide(double side) {
        setWidth(side);
        setLength(side);
    }
    @Override
    public void setWidth(double width) {
        setSide(width);
    }@Override
    public void setLength(double length) {
        setSide(length);
    }
    @Override
    public String toString() {
        return "A Square of side " + getSide()+" , which is  a subclass of "+ super.toString();
    }

}
